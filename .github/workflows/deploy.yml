name: Deploy Backend and Frontend

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # --- Фронтенд ---
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      # --- Бэкенд ---
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Build backend
        run: npm run build
        working-directory: ./backend

      # --- Деплой на сервер ---
      - name: Deploy backend via rsync + ssh
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PORT: ${{ secrets.SERVER_SSH_PORT }}
          SOURCE: "./backend/"
          TARGET: "/var/www/aquanet/backend"
          EXCLUDE: ".env node_modules .git .github"

      - name: Deploy frontend via rsync + ssh
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PORT: ${{ secrets.SERVER_SSH_PORT }}
          SOURCE: "./frontend/build/"
          TARGET: "/var/www/aquanet/frontend"
          EXCLUDE: ".env node_modules .git .github"

      # --- Запуск скриптов на сервере ---
      - name: Run post-deploy script on server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd /var/www/aquanet/backend
            npm install --production
            pm2 restart aquanet-backend || pm2 start dist/main.js --name aquanet-backend

            cd /var/www/aquanet/frontend
            # (если нужно, здесь можно обновить nginx или что-то ещё)
