name: Deploy Backend and Frontend to Server

on:
  push:
    branches:
      - master

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache backend node modules
        uses: actions/cache@v3
        with:
          path: ./backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Build backend
        run: npm run build
        working-directory: ./backend

      - name: Create target directory on server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            mkdir -p /var/www/aquanet/backend

      - name: Deploy backend files via rsync + ssh
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PORT: ${{ secrets.SERVER_SSH_PORT }}
          SOURCE: ./backend/
          TARGET: /var/www/aquanet/backend
          ARGS: >
            --delete
            --verbose
            --exclude='.env'
            --exclude='node_modules/'
            --exclude='.git/'
            --exclude='.github/'

      - name: Create backend .env on server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cat > /var/www/aquanet/backend/.env <<'EOF'
            DB_HOST="${{ secrets.DB_HOST }}"
            DB_PORT="${{ secrets.DB_PORT }}"
            DB_USERNAME="${{ secrets.DB_USERNAME }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            DB_DATABASE="${{ secrets.DB_DATABASE }}"
            EOF

      - name: Run backend post-deploy script on server (npm install + pm2)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            cd /var/www/aquanet/backend

            npm install --production

            pm2 restart aquanet-backend || pm2 start dist/main.js --name aquanet-backend

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache frontend node modules
        uses: actions/cache@v3
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Create target directory on server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            mkdir -p /var/www/aquanet/frontend

      - name: Deploy frontend static files via rsync + ssh
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PORT: ${{ secrets.SERVER_SSH_PORT }}
          SOURCE: ./frontend/build/
          TARGET: /var/www/aquanet/frontend
          ARGS: >
            --delete
            --verbose
            --exclude='.env'
            --exclude='node_modules/'
            --exclude='.git/'
            --exclude='.github/'

      - name: Reload nginx to apply frontend changes
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            sudo systemctl reload nginx || true
